apiVersion: v1
kind: Template
metadata:
  name: spring-boot-db-notes-template
annotations:
    description: "A SpringBoot microservice which uses MySQL database to store notes and exposes a REST endpoint"
# Parameters
parameters:
- name: ARTIFACT_COPY_ARGS
  description: Syntax to be used to copy uberjar files to the target directory
  displayName: Copy Args
  value: '*-exec.jar'
  required: true
# Objects defined for the template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spring-boot-db-notes
      group: me.snowdrop
      version: 1.0-SNAPSHOT
    name: spring-boot-db-notes
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: spring-boot-db-notes
      group: me.snowdrop
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: spring-boot-db-notes
      group: me.snowdrop
      version: 1.0-SNAPSHOT
    name: spring-boot-db-notes
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: spring-boot-db-notes
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: spring-boot-db-notes
      group: me.snowdrop
      version: 1.0-SNAPSHOT
    name: spring-boot-db-notes
  spec:
    replicas: 1
    selector:
      app: spring-boot-db-notes
      group: me.snowdrop
      version: 1.0-SNAPSHOT
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: spring-boot-db-notes
          group: me.snowdrop
          version: 1.0-SNAPSHOT
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: SPRING_PROFILES_ACTIVE
            value: openshift
          image: spring-boot-db-notes:latest
          imagePullPolicy: IfNotPresent
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          securityContext:
            privileged: false
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - spring-boot
        from:
          kind: ImageStreamTag
          name: spring-boot-db-notes:latest
      type: ImageChange
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: spring-boot-db-notes-s2i
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: spring-boot-db-notes:latest
    postCommit: {}
    resources: {}
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        env:
        - name: ARTIFACT_COPY_ARGS
          value: '*.jar'
        from:
          kind: ImageStreamTag
          name: runtime:latest
      type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: spring-boot-db-notes
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: runtime
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift